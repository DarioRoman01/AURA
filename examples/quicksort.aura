funcion swap(a, b, arr) {
    si (a != b) {
        tpm := arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
}

funcion partition(elements, start, end) {
    pivot_index := start
    pivot := elements[pivot_index]

    mientras(start < end) {
        mientras(start < largo(elements) && elements[start] <= pivot) {
            start += 1;
        }

        mientras(elements[end] > pivot) {
            end -= 1;
        }

        si(start < end) {
            swap(start, end, elements);
        }
    } 

    regresa end;
}

funcion quick_sort(elements, start, end) {
    si(start < end) {
        pi := partition(elements, start, end);
        quick_sort(elements, start, pi - 1);
        quick_sort(elements, pi+ 1, end);
    }
}

funcion main() {
    tests := lista[
        lista[11,9,29,7,2,15,28],
        lista[3, 7, 9, 11],
        lista[25, 22, 21, 10],
        lista[29, 15, 28],
        lista[6]
    ]

    tests:porCada(|test| => {
        quick_sort(elements, 0, largo(elements)-1)
        escribir("sorted: ", test);
    });
}

main();